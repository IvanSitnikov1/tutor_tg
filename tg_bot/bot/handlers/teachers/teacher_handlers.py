"""–ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π"""

from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters import Command

from bot.api_helpers.lessons.api_lesson_requests import add_lesson_request, \
    update_lesson_date_requests
from bot.api_helpers.teachers.api_teacher_requests import get_teacher_request
from bot.contexts import UploadFile, AddLesson, EditLessonDate
from bot.functions.lessons.lesson_funcs import upload_file_on_server, save_file_in_db, \
    show_lesson_for_teacher_details
from bot.functions.students.student_funcs import show_student_menu
from bot.functions.teachers.teacher_funcs import show_teacher_menu, show_personal_files
from bot.keyboards.teacher_keyboards import students_kb
from bot.routers import teacher_router
from bot.storage import STUDENTS
from loggers import logger


@teacher_router.message(Command('menu'))
async def cmd_menu(message: Message):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±—ã—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /menu - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É—á–∏—Ç–µ–ª—è –∏–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞"""

    if message.from_user.id in STUDENTS:
        logger.info('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–∞')
        await show_student_menu(message)
    else:
        logger.info('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é —É—á–∏—Ç–µ–ª—è')
        await show_teacher_menu(message)


@teacher_router.message(F.text, AddLesson.lesson_name)
async def handle_lesson_name_message(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —É—Ä–æ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö,
    –∑–∞—Ç–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —É—Ä–æ–∫
    """

    logger.info('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É—Ä–æ–∫–∞ –ø—Ä–∏ –µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏')
    await state.update_data(lesson_name=message.text)

    lesson_data = await state.get_data()
    new_lesson = await add_lesson_request(
        message.from_user.id,
        lesson_data.get('student_id'),
        lesson_data.get('lesson_name'),
    )
    logger.info(new_lesson.get('detail'))
    await message.answer(new_lesson.get('detail'))
    await state.clear()
    await show_lesson_for_teacher_details(message, new_lesson.get('data', {}).get('id'))


@teacher_router.message(F.text.in_({'üë§–£—á–µ–Ω–∏–∫–∏', 'üì© –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–µ–Ω–∏–∫–∞', 'üìù–õ–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã'}))
async def handle_teacher_message(message: Message):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é —É—á–∏—Ç–µ–ª—è"""

    logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–º–∞–Ω–¥ –º–µ–Ω—é —É—á–∏—Ç–µ–ª—è')
    if message.text == 'üë§–£—á–µ–Ω–∏–∫–∏':
        logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–º–∞–Ω–¥–∞ –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–æ–≤ —É—á–∏—Ç–µ–ª—è')
        current_user = await get_teacher_request(message.from_user.id)
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤
        await message.answer(
            '–í–∞—à–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã:',
            reply_markup=students_kb(current_user.get('data', {}).get('students', []))
        )
    elif message.text == 'üì© –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–µ–Ω–∏–∫–∞':
        logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–º–∞–Ω–¥–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞')
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ (tg id —É—á–∏—Ç–µ–ª—è)
        await message.answer('–î–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞ - —Å–æ–æ–±—â–∏—Ç–µ –µ–º—É —Å–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥:')
        await message.answer(f'<code>{message.from_user.id}</code>', parse_mode='HTML')
    elif message.text == 'üìù–õ–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã':
        logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–º–∞–Ω–¥–∞ –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —É—á–∏—Ç–µ–ª—è')
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã —É—á–∏—Ç–µ–ª—è
        await show_personal_files(message)


@teacher_router.message(
    lambda message: (message.document or message.photo or message.video or message.audio)
                    and message.from_user.id not in STUDENTS,
    UploadFile.file,
)
async def handle_upload_file(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏
    –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —É—Ä–æ–∫ –ª–∏–±–æ –ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    """

    logger.info('–ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –æ—Ç —É—á–∏—Ç–µ–ª—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏')
    upload_error = await upload_file_on_server(message, state)
    if upload_error:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ —É—á–∏—Ç–µ–ª—è: {upload_error}')
        await message.answer(upload_error)

    saved_file = await save_file_in_db(state)
    logger.info(saved_file.get('detail'))

    await message.answer(f"{saved_file.get('detail')}")
    state_data = await state.get_data()
    if state_data.get('file_type') in ['files', 'homeworks', 'comments']:
        logger.info('–§–∞–π–ª –∫ —É—Ä–æ–∫—É –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ')
        await show_lesson_for_teacher_details(message, state_data.get('lesson_id'))
    elif state_data.get('file_type') == 'personal':
        logger.info('–õ–∏—á–Ω—ã–π —Ñ–∞–π–ª —É—á–∏—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ')
        await show_personal_files(message)

    await state.clear()


@teacher_router.message(F.text, EditLessonDate.new_date)
async def edit_lesson_date(message: Message, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã —É—Ä–æ–∫–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–æ–≤—É—é –¥–∞—Ç—É"""

    state = await state.get_data()
    lesson_id = int(state.get('lesson_id'))
    logger.info(f'–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –¥–∞—Ç–æ–π —É—Ä–æ–∫–∞ —Å id - {lesson_id}')
    new_date = message.text
    response = await update_lesson_date_requests(lesson_id, new_date)
    logger.info(response.get('detail'))
    await message.answer(response.get('detail'))
