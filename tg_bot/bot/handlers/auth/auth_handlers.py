"""–ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

from datetime import datetime

from aiogram import F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from bot.api_helpers.students.api_student_requests import create_student_request
from bot.functions.students.student_funcs import show_student_menu
from bot.keyboards.auth_keyboards import user_type_kb
from bot.keyboards.teacher_keyboards import generate_calendar
from bot.routers import auth_router
from bot.contexts import Form
from bot.storage import update_students
from loggers import logger


@auth_router.message(Command('start'))
async def cmd_start(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤  - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏
    –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –Ω—É–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (handle_set_username). –ï—Å–ª–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã —É—Ä–æ–∫–∞
    """

    logger.info('–ó–∞–ø—É—â–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–º–∞–Ω–¥—ã /start')
    args = message.text.split(' ')
    if len(args) > 1:
        params = args[1]
        parts = params.split('_')
        if params.startswith('edit_date'):
            logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É –¥–∞—Ç—ã —É—Ä–æ–∫–∞')
            await state.update_data(lesson_id=parts[2])
            now = datetime.now()
            # –í—ã–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞—é—â—É—é —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
            await message.answer(
                'üìÖ –í—ã–±–µ—Ä–∏ –¥–∞—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞:',
                reply_markup=generate_calendar(now.year, now.month),
            )
    else:
        logger.info('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await state.clear()
        await message.answer('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
        await state.set_state(Form.username)


@auth_router.message(F.text, Form.username)
async def handle_set_username(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –µ–≥–æ —Ä–æ–ª—å –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –Ω—É–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑
    callback –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (set_teacher –∏–ª–∏ set_student)
    """

    logger.info('–ü–æ–ª—É—á–µ–Ω–æ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    await state.update_data(username=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å:' , reply_markup=user_type_kb())
    await state.set_state(Form.user_type)


@auth_router.message(F.text, Form.teacher_id)
async def handle_set_teacher_for_student(message: Message, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É—á–∏—Ç–µ–ª—è –¥–ª—è —É—á–µ–Ω–∏–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    logger.info('–ü–æ–ª—É—á–µ–Ω –∫–æ–¥ —É—á–∏—Ç–µ–ª—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–µ–Ω–∏–∫–∞')
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —Ç–æ –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    try:
        await state.update_data(teacher_id=int(message.text))
    except ValueError:
        logger.error('–ü–æ–ª—É—á–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∫–æ–¥ —É—á–∏—Ç–µ–ª—è')
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥:')
        return

    data = await state.get_data()
    new_user = await create_student_request(
        data.get('username'),
        message.from_user.id,
        teacher_id=data.get('teacher_id'),
    )
    await message.answer(new_user.get('detail'))
    if new_user.get('data'):
        logger.info(f'–£—á–µ–Ω–∏–∫ {data.get('username')} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω')
        await update_students()
        await show_student_menu(message)
    else:
        logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —É—á–µ–Ω–∏–∏–∫–∞ {data.get('username')}')
        await message.answer('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:')
    await state.clear()
